mutate(kwh = as.numeric(kwh)) %>%
mutate(
# time based transformations
time = as.integer(time),
hour = ceiling(time/ 2 - 1),
min = ifelse(time %% 2, 30, 0),
time = hms(minutes = min, hours = hour)
) %>%
select(-hour, -min) %>%
arrange(date, time) %>%
mutate(
# date based transformations
wday = wday(date, label = TRUE, abbr = TRUE, week_start = 1),
month = month(date, label = TRUE, abbr = TRUE),
year = year(date),
year_factor = factor(year, ordered = TRUE),
season = case_when(
month %in% c("Dec", "Jan", "Feb") ~ "summer",
month %in% c("Mar", "Apr", "May") ~ "autumn",
month %in% c("Jun", "Jul", "Aug") ~ "winter",
month %in% c("Sep", "Oct", "Nov") ~ "spring",
),
season = factor(season,
levels = c("summer", "autumn", "winter", "spring"),
ordered = TRUE),
work = case_when(
wday %in% c("Sat", "Sun") ~ "holiday",
date %in% vic_holidays$date ~ "holiday",
TRUE ~ "work day"
)
)
# knitr opts
knitr::opts_chunk$set(cache.path = here::here("", "story_cache/"),
message = FALSE,
warning = FALSE,
echo = FALSE,
root.dir = here::here()
)
# libraries
library(flexdashboard)
library(tidyverse)
library(lubridate)
library(tsibble)
library(sugrrants)
library(glue)
library(bomrang)
library(hms)
library(broom)
library(ggbeeswarm)
library(DT)
# rainfall measured in mm
rain <- get_historical(stationid = station_id) %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date)))%>%
select(date, rainfall, rainfall_quality = quality)
# weather data for Melbourne Aiport
station_id <- sweep_for_stations(latlon = c(-37.8136, 144.9631)) %>%
filter(name == "MELBOURNE AIRPORT") %>%
pull(site)
# rainfall measured in mm
rain <- get_historical(stationid = station_id) %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date)))%>%
select(date, rainfall, rainfall_quality = quality)
# daily max temp measured in celsius
max_temp <- get_historical(stationid = station_id, type = "max") %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date))) %>%
select(date, max_temperature, max_temp_quality = quality)
n
min_temp <- get_historical(stationid = station_id, type = "min") %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date))) %>%
select(date, min_temperature, min_temp_quality = quality)
# solar exposure measured in MJ/m^2
solar <- get_historical(stationid = station_id, type = "solar")%>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date))) %>%
select(date, solar_exposure)
# join by day
weather <- rain  %>%
inner_join(max_temp) %>%
inner_join(min_temp) %>%
inner_join(solar)
# add all weather variables
elec_long <- elec_long %>%
left_join(weather, by = "date")
# join by day
weather <- rain  %>%
inner_join(max_temp) %>%
inner_join(min_temp) %>%
inner_join(solar)
# add all weather variables
elec_long <- elec_long %>%
left_join(weather, by = "date")
# The long data with weather info is used
elec_sub <- elec_long %>%
filter(between(date,dmy("01-01-2018"), dmy("31-12-2018")))
mod_data <- elec_sub %>%
mutate(time = as.factor(as.character(time))) %>%
mutate_if(is.ordered, ~ factor(., ordered = FALSE))
mod <- lm(kwh~time*work*month+max_temperature, data = mod_data)
elec <- read_csv(here::here("", "data", "meter_01.csv"),
skip=2,
col_names = c("id", "date",  1:48)) %>%
filter(id == "300") %>%
mutate(date = ymd(date))
# Victorian holidays dataset
vic_holidays <- holiday_aus(2017:2019, state = "VIC")
# transform from wide to long
elec_long <- elec %>%
gather(time, kwh, -id, -date) %>%
mutate(kwh = as.numeric(kwh)) %>%
mutate(
# time based transformations
time = as.integer(time),
hour = ceiling(time/ 2 - 1),
min = ifelse(time %% 2, 30, 0),
time = hms(minutes = min, hours = hour)
) %>%
select(-hour, -min) %>%
arrange(date, time) %>%
mutate(
# date based transformations
wday = wday(date, label = TRUE, abbr = TRUE, week_start = 1),
month = month(date, label = TRUE, abbr = TRUE),
year = year(date),
year_factor = factor(year, ordered = TRUE),
season = case_when(
month %in% c("Dec", "Jan", "Feb") ~ "summer",
month %in% c("Mar", "Apr", "May") ~ "autumn",
month %in% c("Jun", "Jul", "Aug") ~ "winter",
month %in% c("Sep", "Oct", "Nov") ~ "spring",
),
season = factor(season,
levels = c("summer", "autumn", "winter", "spring"),
ordered = TRUE),
work = case_when(
wday %in% c("Sat", "Sun") ~ "holiday",
date %in% vic_holidays$date ~ "holiday",
TRUE ~ "work day"
)
)
# weather data for Melbourne Aiport
station_id <- sweep_for_stations(latlon = c(-37.8136, 144.9631)) %>%
filter(name == "MELBOURNE AIRPORT") %>%
pull(site)
rain <- get_historical(stationid = station_id) %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date)))%>%
select(date, rainfall, rainfall_quality = quality)
max_temp <- get_historical(stationid = station_id, type = "max") %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date))) %>%
select(date, max_temperature, max_temp_quality = quality)
min_temp <- get_historical(stationid = station_id, type = "min") %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date))) %>%
select(date, min_temperature, min_temp_quality = quality)
solar <- get_historical(stationid = station_id, type = "solar")%>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date))) %>%
select(date, solar_exposure)
# join by day
weather <- rain  %>%
inner_join(max_temp) %>%
inner_join(min_temp) %>%
inner_join(solar)
# add all weather variables
elec_long <- elec_long %>%
left_join(weather, by = "date")
# The long data with weather info is used
elec_sub <- elec_long %>%
filter(between(date,dmy("01-01-2018"), dmy("31-12-2018")))
mod_data <- elec_sub %>%
mutate(time = as.factor(as.character(time))) %>%
mutate_if(is.ordered, ~ factor(., ordered = FALSE))
mod <- lm(kwh~time*work*month+max_temperature, data = mod_data)
glance(mod)
mod_data_all <- augment(mod)
mod_data_all <- augment(mod, mod_data)
ggplot(mod_data_all, aes(x=kwh, y=.fitted)) + geom_point()
cal <- mod_data_all %>%
frame_calendar(time, kwh, date, ncol = 4)
?frame_calendar
mod_data_all %>%
select(date, time, kwh, .fitted) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=kwh, colour=type)) +
geom_line()
mod_data_all %>%
select(date, time, kwh, .fitted) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=kwh, colour=typem group=date)) +
geom_line()
mod_data_all %>%
select(date, time, kwh, .fitted) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=kwh, colour=type, group=date)) +
geom_line()
mod_data_all %>%
select(date, time, kwh, .fitted) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=date)) +
geom_line()
mod_data_all %>%
filter(between(date, dmy("01-01-2018"), dmy("31-12-2018"))) %>%
select(date, time, kwh, .fitted) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=date)) +
geom_line()
mod_data_all %>%
filter(between(date, dmy("01-01-2018"), dmy("31-01-2018"))) %>%
select(date, time, kwh, .fitted) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=date)) +
geom_line()
mod_data_all %>%
filter(between(date, dmy("01-01-2018"), dmy("31-01-2018"))) %>%
select(date, time, kwh, .fitted) %>%
rename(obs=kwh) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=date)) +
geom_line()
p <- mod_data_all %>%
filter(between(date, dmy("01-01-2018"), dmy("31-01-2018"))) %>%
select(date, time, kwh, .fitted) %>%
rename(obs=kwh) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=date)) +
geom_line()
prettify(p)
p <- mod_data_all %>%
filter(between(date, dmy("01-01-2018"), dmy("31-01-2018"))) %>%
select(date, time, kwh, .fitted) %>%
rename(obs=kwh) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=interaction(type, date))) +
geom_line()
prettify(p)
p <- mod_data_all %>%
filter(between(date, dmy("01-02-2018"), dmy("18-02-2018"))) %>%
select(date, time, kwh, .fitted) %>%
rename(obs=kwh) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=interaction(type, date))) +
geom_line()
prettify(p)
p <- mod_data_all %>%
filter(between(date, dmy("01-02-2018"), dmy("28-02-2018"))) %>%
select(date, time, kwh, .fitted) %>%
rename(obs=kwh) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=interaction(type, date))) +
geom_line()
prettify(p)
p <- mod_data_all %>%
filter(between(date, dmy("01-03-2018"), dmy("31-03-2018"))) %>%
select(date, time, kwh, .fitted) %>%
rename(obs=kwh) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=interaction(type, date))) +
geom_line()
prettify(p)
p <- mod_data_all %>%
filter(between(date, dmy("01-01-2018"), dmy("31-03-2018"))) %>%
select(date, time, kwh, .fitted) %>%
rename(obs=kwh) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=interaction(type, date))) +
geom_line()
prettify(p)
mod_data_new <- augment(mod, elec_long)
?augment
mod_data_new <- augment(mod, newdata=elec_long)
mod
mod_data_new <- augment(mod, newdata=elec_long)
elec_new <- elec_long %>%
mutate(time = as.factor(as.character(time))) %>%
mutate_if(is.ordered, ~ factor(., ordered = FALSE))
mod_data_new <- augment(mod, newdata=elec_new)
p <- mod_data_new %>%
filter(between(date, dmy("01-01-2019"), dmy("31-01-2019"))) %>%
select(date, time, kwh, .fitted) %>%
rename(obs=kwh) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=interaction(type, date))) +
geom_line()
prettify(p)
p <- mod_data_new %>%
filter(between(date, dmy("01-01-2019"), dmy("18-02-2019"))) %>%
select(date, time, kwh, .fitted) %>%
rename(obs=kwh) %>%
gather(type, kwh, -date, -time) %>%
group_by(type) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, colour=type, group=interaction(type, date))) +
geom_line()
prettify(p)
# knitr opts
knitr::opts_chunk$set(cache = FALSE,
message = FALSE,
warning = FALSE,
echo = FALSE
)
# add all weather variables
#elec_long <- read_rds(here::here("webstory", "data", "elec_all.rds"))
#fit <- read_rds(here::here("webstory", "data", "model_fit.rds"))
elec_long <- read_rds("data/elec_all.rds")
# libraries
library(flexdashboard)
library(tidyverse)
library(tidyverse)
library(lubridate)
library(tsibble)
library(sugrrants)
library(glue)
library(bomrang)
library(hms)
library(sugrrants)
library(glue)
library(bomrang)
library(hms)
library(broom)
library(hms)
library(broom)
library(ggbeeswarm)
library(here)
# add all weather variables
#elec_long <- read_rds(here::here("webstory", "data", "elec_all.rds"))
#fit <- read_rds(here::here("webstory", "data", "model_fit.rds"))
elec_long <- read_rds("data/elec_all.rds")
library(tidyverse)
library(lubridate)
library(tsibble)
library(glue)
library(bomrang)
library(hms)
# preprocessing data
elec <- read_csv(here::here("", "data", "meter_01.csv"),
skip=2,
col_names = c("id", "date",  1:48)) %>%
filter(id == "300") %>%
mutate(date = ymd(date))
# Victorian holidays dataset
vic_holidays <- holiday_aus(2017:2019, state = "VIC")
# transform from wide to long
elec_long <- elec %>%
gather(time, kwh, -id, -date) %>%
mutate(kwh = as.numeric(kwh)) %>%
mutate(
# time based transformations
time = as.integer(time),
hour = ceiling(time/ 2 - 1),
min = ifelse(time %% 2, 30, 0),
time = hms(minutes = min, hours = hour)
) %>%
select(-hour, -min) %>%
arrange(date, time) %>%
mutate(
# date based transformations
wday = wday(date, label = TRUE, abbr = TRUE, week_start = 1),
month = month(date, label = TRUE, abbr = TRUE),
year = year(date),
year_factor = factor(year, ordered = TRUE),
season = case_when(
month %in% c("Dec", "Jan", "Feb") ~ "summer",
month %in% c("Mar", "Apr", "May") ~ "autumn",
month %in% c("Jun", "Jul", "Aug") ~ "winter",
month %in% c("Sep", "Oct", "Nov") ~ "spring",
),
season = factor(season,
levels = c("summer", "autumn", "winter", "spring"),
ordered = TRUE),
work = case_when(
wday %in% c("Sat", "Sun") ~ "holiday",
date %in% vic_holidays$date ~ "holiday",
TRUE ~ "work day"
)
)
library(sugrrants)
p <- elec_long %>%
left_join(daily, by = "date") %>%
mutate(over_threshold = daily_kwh > input$threshold) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, group = date)) +
geom_line(aes(colour = work)) +
scale_colour_brewer(palette = "Dark2") +
theme(legend.position = "bottom")
# Check data
daily <- elec_long %>%
group_by(date) %>%
summarise(daily_kwh = sum(kwh, na.rm = TRUE))
p <- elec_long %>%
left_join(daily, by = "date") %>%
mutate(over_threshold = daily_kwh > input$threshold) %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, group = date)) +
geom_line(aes(colour = work)) +
scale_colour_brewer(palette = "Dark2") +
theme(legend.position = "bottom")
p <- elec_long %>%
left_join(daily, by = "date") %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, group = date)) +
geom_line(aes(colour = work)) +
scale_colour_brewer(palette = "Dark2") +
theme(legend.position = "bottom")
prettify(p)
# Check data
elec_long %>% count(year)
# weather data for Melbourne Aiport
station_id <- sweep_for_stations(latlon = c(-37.8136, 144.9631)) %>%
filter(name == "MELBOURNE AIRPORT") %>%
pull(site)
# rainfall measured in mm
rain <- get_historical(stationid = station_id) %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date)))%>%
select(date, rainfall, rainfall_quality = quality)
# daily max temp measured in celsius
max_temp <- get_historical(stationid = station_id, type = "max") %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date))) %>%
select(date, max_temperature, max_temp_quality = quality)
min_temp <- get_historical(stationid = station_id, type = "min") %>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date))) %>%
select(date, min_temperature, min_temp_quality = quality)
# solar exposure measured in MJ/m^2
solar <- get_historical(stationid = station_id, type = "solar")%>%
mutate(date = ymd(str_c(year, month, day, sep="-"))) %>%
filter(between(date, min(elec_long$date), max(elec_long$date))) %>%
select(date, solar_exposure)
# join by day
weather <- rain  %>%
inner_join(max_temp) %>%
inner_join(min_temp) %>%
inner_join(solar)
# add all weather variables
elec_long <- elec_long %>%
left_join(weather, by = "date") %>%
mutate(
air_con = if_else(max_temperature > 30 | min_temperature < 5, "yes", "no"),
air_con = as.factor(air_con)
)
library(viridis)
# Check data
p <- elec_long %>%
left_join(daily, by = "date") %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, group = date)) +
geom_line(aes(colour = max_temperature)) +
scale_colour_viridis_c() +
theme(legend.position = "bottom")
prettify(p)
?scale_colour_viridis_c
# Check data
p <- elec_long %>%
left_join(daily, by = "date") %>%
frame_calendar(time, kwh, date, ncol = 4) %>%
ggplot(aes(x=.time, y=.kwh, group = date)) +
geom_line(aes(colour = max_temperature)) +
scale_colour_viridis_c(option="magma") +
theme(legend.position = "bottom")
prettify(p)
write_rds(elec_long, here::here("webstory", "data", "elec_all.rds"))
here("webstory", "data", "elec_all.rds"))
here("webstory", "data", "elec_all.rds")
here("data", "elec_all.rds")
write_rds(elec_long, here::here("data", "elec_all.rds"))
library(curl)
library(bomrang)
help(package="bomrang")
package(curl)
install.packages("curl")
install.packages("curl")
package(curl)
library(curl)
help(package="curl")
?renderGauge
?gauge
library(tidyverse)
?geom_errorbarh
